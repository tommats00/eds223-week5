---
title: "EDS Week 5 Lab"
author: "Tom Gibbens-Matsuyama"
format: html
editor: visual
editor_options: 
  chunk_output_type: console
---

## Load libraries
```{r}
library(sf) # vector handling
library(terra) # raster handling
library(tidyverse)
library(tmap) # map making
library(spData) # spatial data
library(spDataLarge) # spatial data
library(viridisLite)
```

```{r}
# Raster data
elevation <- rast(system.file("raster/srtm.tif", package = "spDataLarge"))

# Vector data
boundary <- read_sf(system.file("vector/zion.gpkg", package = "spDataLarge"))
```

## Always check first to see if crs are the same! 
```{r}
if (crs(elevation) == crs(boundary)) {
  print("CRS match!") 
} else {
  warning("update CRS to match")
  boundary <- st_transform(boundary, st_crs(elevation))
}
```

### CRS are the same, now make a map!
```{r}
tm_shape(elevation) +
  tm_raster(title = "Elevtation (meters)") +
  tm_shape(boundary) +
  tm_borders(lwd = 2) +
  tm_layout(legend.outside = TRUE)
```

## Lets crop data so map covers more space
```{r}
# Crop raster to the extent of the vector object

elevation_cropped <- terra::crop(elevation, boundary)

tm_shape(elevation_cropped) +
  tm_raster(title = "Elevtation (meters)") +
  tm_shape(boundary) +
  tm_borders(lwd = 2) +
  tm_layout(legend.outside = TRUE)
```

## Lets look at the data just within the boundaries 
```{r}
# Mask raster based on vector object
# Convert the cells outside of the park to NA

elevation_masked <- terra::mask(elevation_cropped, boundary)

tm_shape(elevation_masked) +
  tm_raster(title = "Elevtation (meters)") +
  tm_shape(boundary) +
  tm_borders(lwd = 2) +
  tm_layout(legend.outside = TRUE)
```

```{r}
# Mask raster based on vector object
# Convert cells outside of the park to NA

elevation_inverse_mask <- terra::mask(elevation_cropped, boundary, inverse = TRUE)

tm_shape(elevation_inverse_mask) +
  tm_raster(title = "Elevtation (meters)") +
  tm_shape(boundary) +
  tm_borders(lwd = 2) +
  tm_layout(legend.outside = TRUE)
```

```{r}
# Masking to cells inside of park
elevation_inside <- mask(elevation_cropped, boundary)

# directly reassign layer names
names(elevation) <- "elevation"

# Create mask on value of cells
elevation_mask <- elevation_inside
elevation_mask[elevation_mask < 2000] <- NA

tm_shape(elevation_mask) +
  tm_raster() +
  tm_layout(legend.outside = TRUE)

elevation_mask_poly <- terra::as.polygons(elevation_mask) %>% 
  st_as_sf()

tm_shape(elevation_mask_poly) +
  tm_polygons() +
  tm_layout(legend.outside = TRUE)
```

